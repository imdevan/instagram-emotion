{"version":3,"sources":["theme.js","components/GlobalStyles.jsx","components/Container.jsx","components/Icon.jsx","components/Nav.jsx","components/PostHeader.jsx","components/PostReactions.jsx","components/PostComments.jsx","components/PostImage.jsx","components/Post.jsx","components/Page.jsx","data/post.js","App.js","serviceWorker.js","index.js"],"names":["colors","primary","secondary","tertiary","background","breakpoints","xs","concat","sm","md","lg","xl","order","_order","Object","keys","reduce","styles","key","css","_templateObject","_templateObject2","border","GlobalStyles","react_default","a","createElement","core_browser_esm","*","boxSizing","body","backgroundColor","Container","styled","div","Container_templateObject","components_Container","props","Icon","_ref","fontSize","marginRight","marginRightValue","icon","rest","active","activeColor","objectWithoutProperties","react_fontawesome_index_es","assign","Icon_templateObject","defaultProps","Nav","iconMarginRight","iconFontSize","react","height","padding","width","borderBottom","margin","display","justifyContent","alignItems","components_Icon","faInstagram","faCompass","faHeart","faUser","UserAvatar","img","PostHeader_templateObject","PostHeader","user","PostHeader_templateObject2","src","image","alt","userName","StyledReactions","PostReactions_templateObject","PostReactions","PostReactions_templateObject2","faComment","faShare","faBookmark","Comment","comment","text","PostComments_templateObject","StyledComments","PostComments_templateObject2","PostComments","_ref2","comments","_templateObject3","map","_commenet","PostComments_Comment","ImageWrapper","PostImage_templateObject","PostImage","PostImage_templateObject2","PostImage_templateObject3","StyledPost","Post_templateObject","Post","post","description","components_PostReactions","components_PostComments","Page","flexDirection","components_Nav","flexGrow","components_Post","data_post","title","App","components_Page","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e58b4721.chunk.js","sourcesContent":["import {css} from '@emotion/core'\r\n\r\nexport const colors = {\r\n  primary: 'papayaWhip',\r\n  secondary: 'generateKeyPair',\r\n  tertiary: '#e6e6e6',\r\n  background: {\r\n    primary: 'white',\r\n    secondary: '#fafafa'\r\n  }\r\n}\r\n\r\nexport const breakpoints = {\r\n  xs: `@media (min-width: ${0}px)`,\r\n  sm: `@media (min-width: ${500}px)`,\r\n  md: `@media (min-width: ${736}px)`,\r\n  lg: `@media (min-width: ${1200}px)`,\r\n  xl: `@media (min-width: ${1600}px)`\r\n}\r\n\r\nexport const order = (_order) => {\r\n  if(!_order) return ''\r\n\r\n  const styles = Object.keys(_order).reduce((styles, key) => {\r\n    return css`\r\n      ${styles}\r\n      ${breakpoints[key]} {\r\n        order: ${_order[key]};\r\n      }\r\n    `\r\n  }, css``)\r\n\r\n  return styles\r\n}\r\n\r\nexport const border = `1px solid ${colors.tertiary}`\r\n\r\nexport default {\r\n  colors,\r\n  breakpoints,\r\n  border\r\n}","import React from 'react'\r\nimport { Global } from '@emotion/core'\r\nimport {colors} from '../theme'\r\n\r\nexport default () => (\r\n  <Global styles={{\r\n    '*': {\r\n      boxSizing: 'border-box'\r\n    },\r\n    'body': {\r\n      backgroundColor: `${colors.background.secondary}`\r\n    }\r\n  }} />\r\n)","import React from 'react'\nimport styled from '@emotion/styled'\nimport { breakpoints } from '../theme'\n\nconst Container = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: auto;\n\n  ${breakpoints.md} {\n    max-width: 935px;\n    width: 80%;\n  }\n\n  ${breakpoints.lg} {\n    max-width: 1200px;\n  }\n`;\n\nexport const InLineContainer = props => {\n  return (\n    <div style={{\n      maxWidth: 1200,\n      width: '90%',\n      overflowX: 'scroll',\n      margin: 'auto',\n    }}\n    {...props} />\n  )\n}\n\nexport default (props) => (<Container {...props} />);","/** @jsx jsx */\r\nimport {jsx, css} from '@emotion/core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nlet Icon = ({fontSize, marginRight, marginRightValue, icon, active, activeColor, ...rest}) => (\r\n  <FontAwesomeIcon icon={icon} css={css`\r\n    font-size: ${fontSize}px;\r\n    margin-right:  ${marginRight ? marginRightValue : 0}px}\r\n  `} {...rest} />\r\n)\r\n\r\nIcon.defaultProps = {\r\n  fontSize: 30,\r\n  marginRightValue: 30,\r\n  activeColor: 'blue'\r\n}\r\n\r\nexport default Icon","// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport {Fragment} from 'react'\n\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons'\nimport { faCompass } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nimport Container from './Container';\nimport Icon from './Icon'\nimport {colors, border} from '../theme'\n\nconst navHeight = 60\n\nconst Nav = ({iconMarginRight, iconFontSize}) => {\n  return (\n    <Fragment>\n    {/* <div css={{\n      display: 'block',\n      height: navHeight\n    }} /> */}\n\n    <nav css={{\n      boxSizing: 'border-box',\n      height: navHeight,\n      padding: '0 1rem',\n      width: '100%',\n      backgroundColor: colors.background.primary,\n      borderBottom: border,\n    }}> \n    <Container css={{\n      height: '100%',\n      margin: 'auto',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }}>\n      <Icon icon={faInstagram} />\n\n      <div>\n        <Icon icon={faCompass} marginRight />\n        <Icon icon={faHeart} marginRight />\n        <Icon icon={faUser} />\n      </div>\n    </Container>\n    </nav>\n    </Fragment>\n  )\n}\n\nexport default Nav;\n","/** @jsx jsx */\nimport {jsx, css} from '@emotion/core'\nimport styled from '@emotion/styled'\nimport {breakpoints, colors, border, order} from '../theme'\n\nconst UserAvatar = styled.img`\n  border-radius: 50%;\n  height: 3rem;\n  width: 3rem;\n  display: inline-block;\n  margin-right: 1rem;\n`\n\nexport default ({user, ...rest}) => {\n  return (\n    <div {...rest} css={css`\n      ${order(rest.order)}\n      background-color: ${colors.background.primary};\n      width: 100%;\n      height: 72px;\n      padding: 1rem;\n      display: flex;\n      align-items: center;\n      justify-content: start;\n\n      ${breakpoints.md} {\n        border-bottom: ${border};\n        width: 50%;\n      }\n    `}>\n\n      <UserAvatar src={user.image} alt={user.userName}/>\n      <h2>@{user.userName}</h2>\n    </div>\n  )\n};","// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\n\nimport { faShare } from '@fortawesome/free-solid-svg-icons'\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faComment } from '@fortawesome/free-solid-svg-icons'\n\nimport Icon from './Icon'\nimport {order, colors, border, breakpoints} from '../theme'\n\nconst StyledReactions = styled.div`\n  padding: 1rem;\n  display: flex; \n  align-items: center;\n  justify-content: space-between;\n\n  ${breakpoints.md} {\n    border-top: ${border};\n  }\n`\n\nconst PostReactions = props => {\n  return (\n    <StyledReactions {...props} css={css`${order(props.order)}`} >\n      <div>\n        <Icon icon={faHeart} marginRight />\n        <Icon icon={faComment} marginRight />\n        <Icon icon={faShare} marginRight />\n      </div>\n\n      <Icon icon={faBookmark} />\n    </StyledReactions>\n  )\n}\n\nexport default PostReactions;","// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport {order, colors, breakpoints} from '../theme'\n\nconst Comment = ({comment}) => {\n  const {userName, text} = comment;\n\n  return (\n    <div css={css`width: 100;`}>\n      <strong>@{userName}:</strong> {text}\n    </div>\n  )\n}\n\nconst StyledComments = styled.div`\n  background: ${colors.background.primary};\n  width: 100%;\n  padding: 1rem;\n\n  ${breakpoints.md} {\n    width: 50%;\n    flex-grow: 1\n  }\n`;\n\nconst PostComments = ({order: _order, comments, ...rest}) => {\n  return (\n    <StyledComments {...rest} css={css`${order(_order)}`}>\n      {comments.map(_commenet => <Comment comment={_commenet} />)}\n    </StyledComments>\n  )\n}\n\nexport default PostComments;","/** @jsx jsx */\nimport {jsx, css} from '@emotion/core'\nimport styled from '@emotion/styled'\nimport {breakpoints, order, border} from '../theme'\n\nconst ImageWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${breakpoints.md} {\n    border-right: ${border};\n    width: 50%;\n    height: 100%;\n  }\n`\n\nexport default props => <ImageWrapper css={css`${order(props.order)}`} >\n  <img {...props} css={css`width: 100%`} />\n</ImageWrapper>;","// this comment tells babel to convert jsx to calls to a function called jsx instead of React.createElement\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport PostHeader from './PostHeader'\nimport PostReactions from './PostReactions'\nimport PostComments from './PostComments'\nimport PostImage from './PostImage'\nimport {breakpoints, colors, border} from '../theme'\n\nconst StyledPost = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  background: ${colors.background.primary};\n\n  ${breakpoints.md} {\n    height: 500px;\n    width: 100%;\n    margin-top: 100px;\n    border: ${border};\n    border-bottom-right-radius: 3px;\n    border-top-right-radius: 3px;\n  }\n`\n\nconst Post = ({post}) => {\n  return (\n    <StyledPost>\n      <PostHeader user={post.user} order={{xs: 1, md: 2}}/>\n\n      <PostImage src={post.image} alt={post.description} order={{xs: 2, md: 1}} />\n      <PostReactions order={{xs: 3, md: 4}} />\n      <PostComments comments={post.comments} order={{xs: 4, md: 3}} />\n    </StyledPost>\n  )\n}\n\nexport default Post;","/** @jsx jsx */\nimport { jsx } from '@emotion/core'\n\nimport GlobalStyles from './GlobalStyles'\nimport Container from './Container'\nimport Nav from './Nav'\nimport Post from './Post'\n\n\nconst Page = (props) => {\n  return (\n    <div css={{\n      display: 'flex',\n      height: '100%',\n      flexDirection: 'column',\n      alignItems: 'center',\n    }}>\n      <Nav/>\n      <GlobalStyles />\n\n      <Container css={{\n        margin: 'auto',\n        display: 'flex',\n        flexGrow: '1',\n        height: '100%',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}>\n        <Post post={props.post}/>\n      </Container>\n    </div>\n  )\n}\n\nexport default Page","export default {\n  title: 'Cute Puppy',\n  description: 'Instagram descriptions are usually the first comment authored by the original poster. They are also the only parts of an instagram post that can be edited...',\n  image: 'https://images.unsplash.com/photo-1556089968-3321b136270b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1052&q=80',\n  user: {\n    userName: 'devinPapaya',\n    image: 'https://images.unsplash.com/profile-1554178980713-1d339b0c7aeb?dpr=1&auto=format&fit=crop&w=150&h=150&q=60&crop=faces&bg=fff'\n  },\n  comments: [{\n    userName: 'devinPapaya',\n    text: 'Instagram descriptions are usually the first comment authored by the original poster. They are also the only parts of an instagram post that can be edited...',\n  }]\n}","import React from 'react'\nimport Page from './components/Page'\nimport post from './data/post'\n\nconst App = props => <Page {...props} post={post}/>\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}